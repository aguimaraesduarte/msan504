for the Gamma random variable", xlab="x")
curve(dgamma(x, alpha, beta), 0, 10, add=T, col="red")
legend(4, 0.5, paste("Gamma(", alpha, ",", beta, ")"), lty=1, col="red")
cauchy <- function(x) (1/pi)*(1/(1+x^2))
n <- 100000
simulation <- data.frame(unif = runif(n, 0, 1)) # U~unif(0, 1)
simulation$auxilliary <- replicate(n, cauchy(runif(1,-10,10))) # Y~Cauchy -> g
simulation$target <- dnorm(simulation$auxilliary, 0, 1) # f(Y)
c <- sqrt(pi/2)
simulation$accept <- ifelse(simulation$unif < simulation$target/(c*simulation$auxilliary),
T, F) # accept if U<f/(c*g)
hist(simulation$auxilliary[simulation$accept], freq=F, ylim=c(0, 0.55), xlim=c(-5, 5),
main="Histogram of realizations generated
for the Cauchy random variable", xlab="x")
curve(dnorm(x, 0, 1), -5, 5, add=T, col="red")
legend(2, 0.5, "N(0, 1)", lty=1, col="red")
alpha <- 2
beta <- 1.5
lambda <- 1/beta
n <- 100000
simulation <- data.frame(unif = runif(n, 0, 1)) # U~unif(0, 1)
simulation$auxilliary <- rexp(n, lambda) # Y~Exp(1/beta) -> g
simulation$target <- dgamma(simulation$auxilliary, alpha, beta) # f(Y)
c <- 1.3601
simulation$accept <- ifelse(simulation$unif < simulation$target/(c*simulation$auxilliary),
T, F) # accept if U<f/(c*g)
hist(simulation$auxilliary[simulation$accept], freq=F, breaks=75, ylim=c(0, 0.55),
main="Histogram of realizations generated
for the Gamma random variable", xlab="x")
curve(dgamma(x, alpha, beta), 0, 10, add=T, col="red")
legend(4, 0.5, paste("Gamma(", alpha, ",", beta, ")"), lty=1, col="red")
legend(2.5, 0.5, paste("Gamma(", alpha, ",", beta, ")"), lty=1, col="red")
curve(dgamma(x, 1/alpha, beta), 0, 10, add=T, col="red")
hist(simulation$auxilliary[simulation$accept], freq=F, breaks=75, ylim=c(0, 0.55),
main="Histogram of realizations generated
for the Gamma random variable", xlab="x")
curve(dgamma(x, 1/alpha, beta), 0, 10, add=T, col="red")
hist(simulation$auxilliary[simulation$accept], freq=F, breaks=75, ylim=c(0, 0.55),
main="Histogram of realizations generated
for the Gamma random variable", xlab="x")
curve(dgamma(x, 1/alpha, 1/beta), 0, 10, add=T, col="red")
curve(dgamma(x, alpha, beta), 0, 10, add=T, col="red")
setwd("~/Documents/msan504/HW3")
simulation <- data.frame(unif = runif(n, 0, 1)) # U~unif(0, 1)
simulation$Y <- rexp(n, lambda) # Y~Exp(1/beta)
simulation$auxilliary <- dexp(simulation$Y, lambda) # g(Y)
simulation$target <- dgamma(simulation$auxilliary, alpha, beta) # f(Y)
c <- 1.3601
simulation$accept <- ifelse(simulation$unif < simulation$target/(c*simulation$auxilliary),
T, F) # accept if U<f/(c*g)
hist(simulation$Y[simulation$accept], freq=F, breaks=75, ylim=c(0, 0.55),
main="Histogram of realizations generated
for the Gamma random variable", xlab="x")
curve(dgamma(x, alpha, beta), 0, 10, add=T, col="red")
legend(2.5, 0.5, paste("Gamma(", alpha, ",", beta, ")"), lty=1, col="red")
curve(dgamma(x, alpha, 1/beta), 0, 10, add=T, col="red")
curve(dgamma(x, 1/alpha, beta), 0, 10, add=T, col="red")
simulation$Y <- rexp(n, beta) # Y~Exp(1/beta)
simulation$auxilliary <- dexp(simulation$Y, beta) # g(Y)
simulation$target <- dgamma(simulation$auxilliary, alpha, beta) # f(Y)
c <- 1.3601
simulation$accept <- ifelse(simulation$unif < simulation$target/(c*simulation$auxilliary),
T, F) # accept if U<f/(c*g)
hist(simulation$Y[simulation$accept], freq=F, breaks=75, ylim=c(0, 0.55),
main="Histogram of realizations generated
for the Gamma random variable", xlab="x")
curve(dgamma(x, alpha, beta), 0, 10, add=T, col="red")
simulation$Y <- rexp(n, lambda) # Y~Exp(1/beta)
simulation$auxilliary <- dexp(simulation$Y, lambda) # g(Y)
simulation$target <- dgamma(simulation$auxilliary, alpha, beta) # f(Y)
c <- 1.3601
simulation$accept <- ifelse(simulation$unif < simulation$target/(c*simulation$auxilliary),
T, F) # accept if U<f/(c*g)
hist(simulation$Y[simulation$accept], freq=F, breaks=75, ylim=c(0, 0.55),
main="Histogram of realizations generated
for the Gamma random variable", xlab="x")
curve(dgamma(x, alpha, beta), 0, 10, add=T, col="red")
legend(2.5, 0.5, paste("Gamma(", alpha, ",", beta, ")"), lty=1, col="red")
hist(simulation$auxilliary[simulation$accept], freq=F, ylim=c(0, 0.55), xlim=c(-5, 5),
main="Histogram of realizations generated
for the Cauchy random variable", xlab="x")
curve(dnorm(x, 0, 1), -5, 5, add=T, col="red")
curve((1/pi)*(1/(1+x^2)), -5, 5)
curve(dnorm(x, 0, 1), -5, 5, add=T, col="red")
?dcauchy
n <- 100000
simulation <- data.frame(unif = runif(n, 0, 1)) # U~unif(0, 1)
simulation$Y <- rcauchy(n) # Y~Cauchy
simulation$auxilliary <- dcauchy(simulation$Y)
simulation$target <- dnorm(simulation$auxilliary, 0, 1) # f(Y)
c <- sqrt(pi/2)
simulation$accept <- ifelse(simulation$unif < simulation$target/(c*simulation$auxilliary),
T, F) # accept if U<f/(c*g)
hist(simulation$auxilliary[simulation$accept], freq=F, ylim=c(0, 0.55), xlim=c(-5, 5),
main="Histogram of realizations generated
for the Cauchy random variable", xlab="x")
curve(dnorm(x, 0, 1), -5, 5, add=T, col="red")
legend(2, 0.5, "N(0, 1)", lty=1, col="red")
hist(simulation$Y[simulation$accept], freq=F, ylim=c(0, 0.55), xlim=c(-5, 5),
main="Histogram of realizations generated
for the Cauchy random variable", xlab="x")
curve(dnorm(x, 0, 1), -5, 5, add=T, col="red")
legend(2, 0.5, "N(0, 1)", lty=1, col="red")
alpha <- 2
beta <- 1.5
lambda <- 1/beta
n <- 100000
simulation <- data.frame(unif = runif(n, 0, 1)) # U~unif(0, 1)
simulation$Y <- rexp(n, lambda) # Y~Exp(1/beta)
simulation$auxilliary <- dexp(simulation$Y, lambda) # g(Y)
simulation$target <- dgamma(simulation$auxilliary, alpha, beta) # f(Y)
c <- 1.3601
simulation$accept <- ifelse(simulation$unif < simulation$target/(c*simulation$auxilliary),
T, F) # accept if U<f/(c*g)
hist(simulation$Y[simulation$accept], freq=F, breaks=75, ylim=c(0, 0.55),
main="Histogram of realizations generated
for the Gamma random variable", xlab="x")
curve(dgamma(x, alpha, beta), 0, 10, add=T, col="red")
legend(2.5, 0.5, paste("Gamma(", alpha, ",", beta, ")"), lty=1, col="red")
c <- 10#1.3601
simulation$accept <- ifelse(simulation$unif < simulation$target/(c*simulation$auxilliary),
T, F) # accept if U<f/(c*g)
hist(simulation$Y[simulation$accept], freq=F, breaks=75, ylim=c(0, 0.55),
main="Histogram of realizations generated
for the Gamma random variable", xlab="x")
curve(dgamma(x, alpha, beta), 0, 10, add=T, col="red")
c <- .5#1.3601
simulation$accept <- ifelse(simulation$unif < simulation$target/(c*simulation$auxilliary),
T, F) # accept if U<f/(c*g)
hist(simulation$Y[simulation$accept], freq=F, breaks=75, ylim=c(0, 0.55),
main="Histogram of realizations generated
for the Gamma random variable", xlab="x")
curve(dgamma(x, alpha, beta), 0, 10, add=T, col="red")
legend(2.5, 0.5, paste("Gamma(", alpha, ",", beta, ")"), lty=1, col="red")
c <- .25#1.3601
simulation$accept <- ifelse(simulation$unif < simulation$target/(c*simulation$auxilliary),
T, F) # accept if U<f/(c*g)
hist(simulation$Y[simulation$accept], freq=F, breaks=75, ylim=c(0, 0.55),
main="Histogram of realizations generated
for the Gamma random variable", xlab="x")
curve(dgamma(x, alpha, beta), 0, 10, add=T, col="red")
c <- 1#1.3601
simulation$accept <- ifelse(simulation$unif < simulation$target/(c*simulation$auxilliary),
T, F) # accept if U<f/(c*g)
hist(simulation$Y[simulation$accept], freq=F, breaks=75, ylim=c(0, 0.55),
main="Histogram of realizations generated
for the Gamma random variable", xlab="x")
curve(dgamma(x, alpha, beta), 0, 10, add=T, col="red")
legend(2.5, 0.5, paste("Gamma(", alpha, ",", beta, ")"), lty=1, col="red")
c <- 1.3601
simulation$accept <- ifelse(simulation$unif < simulation$target/(c*simulation$auxilliary),
T, F) # accept if U<f/(c*g)
hist(simulation$Y[simulation$accept], freq=F, breaks=75, ylim=c(0, 0.55),
main="Histogram of realizations generated
for the Gamma random variable", xlab="x")
curve(dgamma(x, alpha, beta), 0, 10, add=T, col="red")
c <- 1#sqrt(pi/2)
simulation$accept <- ifelse(simulation$unif < simulation$target/(c*simulation$auxilliary),
T, F) # accept if U<f/(c*g)
n <- 100000
simulation <- data.frame(unif = runif(n, 0, 1)) # U~unif(0, 1)
simulation$Y <- rcauchy(n) # Y~Cauchy
simulation$auxilliary <- dcauchy(simulation$Y) # g(Y)
simulation$target <- dnorm(simulation$auxilliary, 0, 1) # f(Y)
c <- 1#sqrt(pi/2)
simulation$accept <- ifelse(simulation$unif < simulation$target/(c*simulation$auxilliary),
T, F) # accept if U<f/(c*g)
hist(simulation$Y[simulation$accept], freq=F, ylim=c(0, 0.55), xlim=c(-5, 5),
main="Histogram of realizations generated
for the Cauchy random variable", xlab="x")
curve(dnorm(x, 0, 1), -5, 5, add=T, col="red")
length(simulation$accept)
sum(simulation$accept)
hist(simulation$Y)
summary(simulation$accept)
summary(simulation$Y)
rcauchy(1)
simulation$Y <- rcauchy(n) # Y~Cauchy
rcauchy(5)
hist(simulation$Y)
head(simulation$Y)
min(simulation$Y)
n <- 100000
simulation <- data.frame(unif = runif(n, 0, 1)) # U~unif(0, 1)
simulation$Y <- rcauchy(n) # Y~Cauchy
simulation$auxilliary <- dcauchy(simulation$Y) # g(Y)
simulation$target <- dnorm(simulation$auxilliary, 0, 1) # f(Y)
n <- 100000
simulation <- data.frame(unif = runif(n, 0, 1)) # U~unif(0, 1)
simulation$Y <- rcauchy(n) # Y~Cauchy
simulation$auxilliary <- dcauchy(simulation$Y) # g(Y)
simulation$target <- dnorm(simulation$Y, 0, 1) # f(Y)
c <- 1#sqrt(pi/2)
simulation$accept <- ifelse(simulation$unif < simulation$target/(c*simulation$auxilliary),
T, F) # accept if U<f/(c*g)
hist(simulation$Y[simulation$accept], freq=F, ylim=c(0, 0.55), xlim=c(-5, 5),
main="Histogram of realizations generated
for the Cauchy random variable", xlab="x")
curve(dnorm(x, 0, 1), -5, 5, add=T, col="red")
legend(2, 0.5, "N(0, 1)", lty=1, col="red")
n <- 100000
simulation <- data.frame(unif = runif(n, 0, 1)) # U~unif(0, 1)
simulation$Y <- rcauchy(n) # Y~Cauchy
simulation$auxilliary <- dcauchy(simulation$Y) # g(Y)
simulation$target <- dnorm(simulation$Y, 0, 1) # f(Y)
c <- sqrt(pi/2)
simulation$accept <- ifelse(simulation$unif < simulation$target/(c*simulation$auxilliary),
T, F) # accept if U<f/(c*g)
hist(simulation$Y[simulation$accept], freq=F, ylim=c(0, 0.55), xlim=c(-5, 5),
main="Histogram of realizations generated
for the Cauchy random variable", xlab="x")
curve(dnorm(x, 0, 1), -5, 5, add=T, col="red")
legend(2, 0.5, "N(0, 1)", lty=1, col="red")
alpha <- 2
beta <- 1.5
lambda <- 1/beta
n <- 100000
simulation <- data.frame(unif = runif(n, 0, 1)) # U~unif(0, 1)
simulation$Y <- rexp(n, lambda) # Y~Exp(1/beta)
simulation$auxilliary <- dexp(simulation$Y, lambda) # g(Y)
simulation$target <- dgamma(simulation$Y, alpha, beta) # f(Y)
c <- 1.3601
simulation$accept <- ifelse(simulation$unif < simulation$target/(c*simulation$auxilliary),
T, F) # accept if U<f/(c*g)
hist(simulation$Y[simulation$accept], freq=F, breaks=75, ylim=c(0, 0.55),
main="Histogram of realizations generated
for the Gamma random variable", xlab="x")
curve(dgamma(x, alpha, beta), 0, 10, add=T, col="red")
legend(2.5, 0.5, paste("Gamma(", alpha, ",", beta, ")"), lty=1, col="red")
n <- 100000
simulation <- data.frame(unif = runif(n, 0, 1)) # U~unif(0, 1)
simulation$Y <- rcauchy(n) # Y~Cauchy
simulation$auxilliary <- dcauchy(simulation$Y) # g(Y)
simulation$target <- dnorm(simulation$Y, 0, 1) # f(Y)
c <- sqrt(pi/2)
simulation$accept <- ifelse(simulation$unif < simulation$target/(c*simulation$auxilliary),
T, F) # accept if U<f/(c*g)
hist(simulation$Y[simulation$accept], freq=F, ylim=c(0, 0.55),breaks=75, xlim=c(-5, 5),
main="Histogram of realizations generated
for the Cauchy random variable", xlab="x")
curve(dnorm(x, 0, 1), -5, 5, add=T, col="red")
legend(2, 0.5, "N(0, 1)", lty=1, col="red")
hist(simulation$Y[simulation$accept], freq=F, ylim=c(0, 0.55),breaks=75, xlim=c(-4, 4),
main="Histogram of realizations generated
for the Cauchy random variable", xlab="x")
curve(dnorm(x, 0, 1), -4, 4, add=T, col="red")
legend(2, 0.5, "N(0, 1)", lty=1, col="red")
legend(1, 0.5, "N(0, 1)", lty=1, col="red")
alpha <- 2
beta <- 1.5
lambda <- 1/beta
n <- 100000
simulation <- data.frame(unif = runif(n, 0, 1)) # U~unif(0, 1)
simulation$Y <- rexp(n, lambda) # Y~Exp(1/beta)
simulation$auxilliary <- dexp(simulation$Y, lambda) # g(Y)
simulation$target <- dgamma(simulation$Y, alpha, beta) # f(Y)
c <- 1.3601
simulation$accept <- ifelse(simulation$unif < simulation$target/(c*simulation$auxilliary),
T, F) # accept if U<f/(c*g)
hist(simulation$Y[simulation$accept], freq=F, breaks=75, ylim=c(0, 0.55),
main="Histogram of realizations generated
for the Gamma random variable", xlab="x")
curve(dgamma(x, alpha, beta), 0, 8, add=T, col="red")
legend(2.5, 0.5, paste("Gamma(", alpha, ",", beta, ")"), lty=1, col="red")
legend(3, 0.5, paste("Gamma(", alpha, ",", beta, ")"), lty=1, col="red")
hist(simulation$Y[simulation$accept], freq=F, breaks=75, ylim=c(0, 0.55), xlim=c(0,8)
main="Histogram of realizations generated
for the Gamma random variable", xlab="x")
curve(dgamma(x, alpha, beta), 0, 8, add=T, col="red")
legend(3, 0.5, paste("Gamma(", alpha, ",", beta, ")"), lty=1, col="red")
alpha <- 2
beta <- 1.5
lambda <- 1/beta
n <- 100000
simulation <- data.frame(unif = runif(n, 0, 1)) # U~unif(0, 1)
simulation$Y <- rexp(n, lambda) # Y~Exp(1/beta)
simulation$auxilliary <- dexp(simulation$Y, lambda) # g(Y)
simulation$target <- dgamma(simulation$Y, alpha, beta) # f(Y)
c <- 1.3601
simulation$accept <- ifelse(simulation$unif < simulation$target/(c*simulation$auxilliary),
T, F) # accept if U<f/(c*g)
hist(simulation$Y[simulation$accept], freq=F, breaks=75, ylim=c(0, 0.55), xlim=c(0, 8),
main="Histogram of realizations generated
for the Gamma random variable", xlab="x")
curve(dgamma(x, alpha, beta), 0, 8, add=T, col="red")
legend(3, 0.5, paste("Gamma(", alpha, ",", beta, ")"), lty=1, col="red")
sum(simulation$accept)
n <- 50000
simulation <- data.frame(unif = runif(n, 0, 1)) # U~unif(0, 1)
simulation$Y <- rexp(n, lambda) # Y~Exp(1/beta)
simulation$auxilliary <- dexp(simulation$Y, lambda) # g(Y)
simulation$target <- dgamma(simulation$Y, alpha, beta) # f(Y)
c <- 1.3601
simulation$accept <- ifelse(simulation$unif < simulation$target/(c*simulation$auxilliary),
T, F) # accept if U<f/(c*g)
hist(simulation$Y[simulation$accept], freq=F, breaks=75, ylim=c(0, 0.55), xlim=c(0, 8),
main="Histogram of realizations generated
for the Gamma random variable", xlab="x")
curve(dgamma(x, alpha, beta), 0, 8, add=T, col="red")
legend(3, 0.5, paste("Gamma(", alpha, ",", beta, ")"), lty=1, col="red")
sum(simulation$accept)
n <- 20000
simulation <- data.frame(unif = runif(n, 0, 1)) # U~unif(0, 1)
simulation$Y <- rexp(n, lambda) # Y~Exp(1/beta)
simulation$auxilliary <- dexp(simulation$Y, lambda) # g(Y)
simulation$target <- dgamma(simulation$Y, alpha, beta) # f(Y)
c <- 1.3601
simulation$accept <- ifelse(simulation$unif < simulation$target/(c*simulation$auxilliary),
T, F) # accept if U<f/(c*g)
hist(simulation$Y[simulation$accept], freq=F, breaks=75, ylim=c(0, 0.55), xlim=c(0, 8),
main="Histogram of realizations generated
for the Gamma random variable", xlab="x")
curve(dgamma(x, alpha, beta), 0, 8, add=T, col="red")
legend(3, 0.5, paste("Gamma(", alpha, ",", beta, ")"), lty=1, col="red")
sum(simulation$accept)
n <- 15000
simulation <- data.frame(unif = runif(n, 0, 1)) # U~unif(0, 1)
simulation$Y <- rexp(n, lambda) # Y~Exp(1/beta)
simulation$auxilliary <- dexp(simulation$Y, lambda) # g(Y)
simulation$target <- dgamma(simulation$Y, alpha, beta) # f(Y)
c <- 1.3601
simulation$accept <- ifelse(simulation$unif < simulation$target/(c*simulation$auxilliary),
T, F) # accept if U<f/(c*g)
hist(simulation$Y[simulation$accept], freq=F, breaks=75, ylim=c(0, 0.55), xlim=c(0, 8),
main="Histogram of realizations generated
for the Gamma random variable", xlab="x")
curve(dgamma(x, alpha, beta), 0, 8, add=T, col="red")
legend(3, 0.5, paste("Gamma(", alpha, ",", beta, ")"), lty=1, col="red")
sum(simulation$accept)
print(paste(sum(simulation$accept), "realizations of the Gamma distribution out of", n, "realizations of the exponential distribution."))
n <- 100000
simulation <- data.frame(unif = runif(n, 0, 1)) # U~unif(0, 1)
simulation$Y <- rcauchy(n) # Y~Cauchy
simulation$auxilliary <- dcauchy(simulation$Y) # g(Y)
simulation$target <- dnorm(simulation$Y, 0, 1) # f(Y)
c <- sqrt(pi/2)
simulation$accept <- ifelse(simulation$unif < simulation$target/(c*simulation$auxilliary),
T, F) # accept if U<f/(c*g)
hist(simulation$Y[simulation$accept], freq=F, ylim=c(0, 0.55),breaks=75, xlim=c(-4, 4),
main="Histogram of realizations generated
for the Cauchy random variable", xlab="x")
curve(dnorm(x, 0, 1), -4, 4, add=T, col="red")
legend(1, 0.5, "N(0, 1)", lty=1, col="red")
sum(simulation$accept)
n <- 15000
simulation <- data.frame(unif = runif(n, 0, 1)) # U~unif(0, 1)
simulation$Y <- rcauchy(n) # Y~Cauchy
simulation$auxilliary <- dcauchy(simulation$Y) # g(Y)
simulation$target <- dnorm(simulation$Y, 0, 1) # f(Y)
c <- sqrt(pi/2)
simulation$accept <- ifelse(simulation$unif < simulation$target/(c*simulation$auxilliary),
T, F) # accept if U<f/(c*g)
hist(simulation$Y[simulation$accept], freq=F, ylim=c(0, 0.55),breaks=75, xlim=c(-4, 4),
main="Histogram of realizations generated
for the Cauchy random variable", xlab="x")
curve(dnorm(x, 0, 1), -4, 4, add=T, col="red")
legend(1, 0.5, "N(0, 1)", lty=1, col="red")
sum(simulation$accept)
genderHeartrate <- read.csv("EffectOfGenderBodyTemperaturesAndRestingHeartRate.csv", header=T)
heartrateMen <- genderHeartrate$Heart.Rate[genderHeartrate$Gender == 0]
heartrateWomen<- genderHeartrate$Heart.Rate[genderTemp$Gender == 1]
heartrateWomen<- genderHeartrate$Heart.Rate[genderHeartrate$Gender == 1]
h1 <- hist(heartrateMen)
h2 <- hist(heartrateWomen)
plot(h1, col=rgb(0,0,1,1/4), xlim=c(96, 101),
main="Histogram of heart rates for men and women",
xlab = "Heartrate")
plot(h2, col=rgb(1,0,0,1/4), add=T)
legend("topright", c("Men", "Women"), col=c(rgb(0,0,1,1/4), rgb(1,0,0,1/4)), lwd=10)
plot(h1, col=rgb(0,0,1,1/4),
main="Histogram of heart rates for men and women",
xlab = "Heartrate")
plot(h2, col=rgb(1,0,0,1/4), add=T)
legend("topright", c("Men", "Women"), col=c(rgb(0,0,1,1/4), rgb(1,0,0,1/4)), lwd=10)
plot(h1, col=rgb(0,0,1,1/4), ylim=c(0,20),
main="Histogram of heart rates for men and women",
xlab = "Heartrate")
plot(h2, col=rgb(1,0,0,1/4), add=T)
plot(h1, col=rgb(0,0,1,1/4), ylim=c(0,22),
main="Histogram of heart rates for men and women",
xlab = "Heartrate")
plot(h2, col=rgb(1,0,0,1/4), add=T)
legend("topright", c("Men", "Women"), col=c(rgb(0,0,1,1/4), rgb(1,0,0,1/4)), lwd=10)
plot(h1, col=rgb(0,0,1,1/4), ylim=c(0,22), xlim=c(54,92)
main="Histogram of heart rates for men and women",
xlab = "Heartrate")
plot(h2, col=rgb(1,0,0,1/4), add=T)
plot(h1, col=rgb(0,0,1,1/4), ylim=c(0,22), xlim=c(54,92),
main="Histogram of heart rates for men and women",
xlab = "Heartrate")
plot(h2, col=rgb(1,0,0,1/4), add=T)
legend("topright", c("Men", "Women"), col=c(rgb(0,0,1,1/4), rgb(1,0,0,1/4)), lwd=10)
plot(h1, col=rgb(0,0,1,1/4), ylim=c(0,22), xlim=c(50,100),
main="Histogram of heart rates for men and women",
xlab = "Heartrate")
plot(h2, col=rgb(1,0,0,1/4), add=T)
legend("topright", c("Men", "Women"), col=c(rgb(0,0,1,1/4), rgb(1,0,0,1/4)), lwd=10)
alpha <- 0.05
s2_m <- var(heartrateMen)
s2_w <- var(heartrateWomen)
n_m <- length(heartrateMen)
n_w <- length(heartrateWomen)
f <- s2_m/s2_w
p <- pf(f, n_m-1, n_w-1, lower.tail = F)*2 #two-sided
p
alpha <- 0.1
s2_m <- var(heartrateMen)
s2_w <- var(heartrateWomen)
n_m <- length(heartrateMen)
n_w <- length(heartrateWomen)
f <- s2_m/s2_w
p <- pf(f, n_m-1, n_w-1, lower.tail = F)*2 #two-sided
p
alpha <- 0.1
Satt <- ((s2_m/n_m + s2_w/n_w)^2) / ((1/(n_m-1))*(s2_m/n_m)^2 + (1/(n_w-1))*(s2_w/n_w)^2)
t_star <- qt(alpha/2, Satt, lower.tail = F)
lower <- (xbar_m - xbar_w) - t_star*sqrt(s2_m/n_m + s2_w/n_w)
upper <- (xbar_m - xbar_w) + t_star*sqrt(s2_m/n_m + s2_w/n_w)
xbar_m <- mean(heartrateMen)
xbar_w <- mean(heartrateWomen)
Satt <- ((s2_m/n_m + s2_w/n_w)^2) / ((1/(n_m-1))*(s2_m/n_m)^2 + (1/(n_w-1))*(s2_w/n_w)^2)
t_star <- qt(alpha/2, Satt, lower.tail = F)
lower <- (xbar_m - xbar_w) - t_star*sqrt(s2_m/n_m + s2_w/n_w)
upper <- (xbar_m - xbar_w) + t_star*sqrt(s2_m/n_m + s2_w/n_w)
lower
upper
xbar_m
xbar_w
xbar_m-xbar_w
myData <- read.csv("MotherEducationBirthWeight.csv", header=T)
plot(myData$BIRTHWEIGHT~myData$YEARSEDUC )
plot(myData$YEARSEDUC~myData$BIRTHWEIGHT )
BIRTHWEIGHT
plot(myData$BIRTHWEIGHT~myData$YEARSEDUC )
rho <- cor(myData$YEARSEDUC, myData$BIRTHWEIGHT)
rho
head(myData)
head(myData[sample(1:nrow(myDataFrame)),])
head(myData[sample(1:nrow(myData)),])
(myDataFrame <- data.frame(abc = 1:3, xyz = -4:-6, bob = 5:7, jan = 10:12))
(myDataFrame <- myDataFrame[sample(1:ncol(myDataFrame))])
(myDataFrame <- myDataFrame[sample(1:nrow(myDataFrame)),])
head(myData[1][sample(1:nrow(myData)),])
(myDataFrame <- myDataFrame[sample(1:nrow(myDataFrame)),])
head(myData[1][sample(1:nrow(myData)),])
myData[1] <- myData[1][sample(1:nrow(myData)),]
rho_hat <- cor(myData$YEARSEDUC, myData$BIRTHWEIGHT)
rho_hat
myData[1] <- myData[1][sample(1:nrow(myData)),]
rho_hat <- cor(myData$YEARSEDUC, myData$BIRTHWEIGHT)
myData[1] <- myData[1][sample(1:nrow(myData)),]
rho_hat <- cor(myData$YEARSEDUC, myData$BIRTHWEIGHT)
rho_hat
rhos <- c()
for(i in 1:25000){
myData[1] <- myData[1][sample(1:nrow(myData)),]
rhos[i] <- cor(myData$YEARSEDUC, myData$BIRTHWEIGHT)
}
hist(rhos)
hist(rhos, main=expression(Histogram of rho)
hist(rhos, main=expression(Histogram of rho))
hist(rhos, main=expression(paste("Histogram of", hat(rho))))
hist(rhos, main=expression(paste("Histogram of ", hat(rho))))
hist(rhos, main=expression(paste("Histogram of ", hat(rho))), xlab=expression(hat(rho)))
hist(rhos, main=expression(paste("Histogram of ", hat(rho))),
xlab=expression(hat(rho)))
abline(v = rho_hat_0, col="red")
axis(1, rho_hat_0, expression(hat(rho)_0))
axis(1, rho_hat_0, expression(hat(rho)))
myData <- read.csv("MotherEducationBirthWeight.csv", header=T)
plot(myData$BIRTHWEIGHT~myData$YEARSEDUC, main="Baby birth weight as a function of mother's years of education", xlab="Mother's years of education", ylab="Baby's weight (g)")
rho_hat_0 <- cor(myData$YEARSEDUC, myData$BIRTHWEIGHT)
rhos <- c()
for(i in 1:25000){
myData[1] <- myData[1][sample(1:nrow(myData)),]
rhos[i] <- cor(myData$YEARSEDUC, myData$BIRTHWEIGHT)
}
hist(rhos, main=expression(paste("Histogram of ", hat(rho))),
xlab=expression(hat(rho)))
abline(v = rho_hat_0, col="red")
axis(1, rho_hat_0, expression(hat(rho)))
axis(1, rho_hat_0, expression(hat(rho))[0])
hist(rhos, main=expression(paste("Histogram of ", hat(rho))),
xlab=expression(hat(rho)))
abline(v = rho_hat_0, col="red")
axis(1, rho_hat_0, expression(hat(rho))[0])
axis(1, rho_hat_0, expression(hat(rho)[0]))
hist(rhos, main=expression(paste("Histogram of ", hat(rho))),
xlab=expression(hat(rho)))
abline(v = rho_hat_0, col="red")
axis(1, rho_hat_0, expression(hat(rho)[0]))
p_empirical <- sum(rhos > rho_hat_0)
p_empirical
p_empirical <- sum(rhos > rho_hat_0)/length(rhos)
p_empirical
?text
hist(rhos, main=expression(paste("Histogram of ", hat(rho))),
xlab=expression(hat(rho)))
abline(v = rho_hat_0, col="red")
text(rho_hat_0, 6500, expression(hat(rho)[0]))
text(rho_hat_0+0.05, 6500, expression(hat(rho)[0]))
hist(rhos, main=expression(paste("Histogram of ", hat(rho))),
xlab=expression(hat(rho)))
abline(v = rho_hat_0, col="red")
text(rho_hat_0+0.05, 6500, expression(hat(rho)[0]))
text(rho_hat_0+0.05, 7000, expression(hat(rho)[0]))
text(rho_hat_0+0.05, 7500, expression(hat(rho)[0]))
text(rho_hat_0+0.05, 7300, expression(hat(rho)[0]))
hist(rhos, main=expression(paste("Histogram of ", hat(rho))),
xlab=expression(hat(rho)))
abline(v = rho_hat_0, col="red")
text(rho_hat_0+0.05, 7300, expression(hat(rho)[0]))
